{"mode":"Text","hardwareTarget":"brain","textContent":"#include \"vex.h\"\n\nusing namespace vex;\n\n// Define the motors\nmotor FrontLeftMotor(PORT1, gearSetting::ratio18_1, false);\nmotor BackLeftMotor(PORT10, gearSetting::ratio18_1, false);\nmotor FrontRightMotor(PORT11, gearSetting::ratio18_1, true);\nmotor BackRightMotor(PORT20, gearSetting::ratio18_1, true);\nmotor MiddleLeftMotor(PORT5, gearSetting::ratio18_1, false);\nmotor MiddleRightMotor(PORT15, gearSetting::ratio18_1, true);\n\n// Define the controller\ncontroller controller_1;\n\n// Function to calculate velocity\ndouble calculateVelocity(double axis3, double axis1) {\n    double x = axis3 + axis1;\n    return 0.0001 * (x * x * x);\n}\n\n// Function to calculate the motor velocities\nvoid setMotorVelocities(double forward, double strafe, double turn) {\n    // Calculate base velocities\n    double velocity_x = calculateVelocity(forward, strafe);\n    double velocity_x_neg = calculateVelocity(forward, -strafe);\n\n    // Set velocities for each motor based on movement direction\n    FrontLeftMotor.setVelocity(velocity_x + turn, percentUnits::pct);\n    BackLeftMotor.setVelocity(velocity_x + turn, percentUnits::pct);\n    FrontRightMotor.setVelocity(velocity_x_neg - turn, percentUnits::pct);\n    BackRightMotor.setVelocity(velocity_x_neg - turn, percentUnits::pct);\n    MiddleLeftMotor.setVelocity(velocity_x + turn, percentUnits::pct);\n    MiddleRightMotor.setVelocity(velocity_x_neg - turn, percentUnits::pct);\n}\n\nint main() {\n    while (true) {\n        // Get the controller axis positions\n        double axis3_position = controller_1.Axis3.position(percent);\n        double axis1_position = controller_1.Axis1.position(percent);\n\n        // Determine movement directions\n        double forward = axis3_position;\n        double strafe = axis1_position;\n        double turn = (controller_1.Axis4.position(percent) / 100.0); // Assuming Axis4 is used for turning\n\n        // Set velocities based on controller inputs\n        setMotorVelocities(forward, strafe, turn);\n\n        // Spin each motor according to its calculated velocity\n        FrontLeftMotor.spin(directionType::fwd);\n        BackLeftMotor.spin(directionType::fwd);\n        FrontRightMotor.spin(directionType::fwd);\n        BackRightMotor.spin(directionType::fwd);\n        MiddleLeftMotor.spin(directionType::fwd);\n        MiddleRightMotor.spin(directionType::fwd);\n\n    }\n}\n","textLanguage":"cpp","robotConfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[5,15],"name":"MotorGroup5","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[1,10,11,20,12],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.3","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}